
<input id="municipal_monthly_no_foreign" value="<%= @municipal_monthly_no_foreign %>" type="hidden" />
<div id="choropleth_map" class="choropleth_map"></div>

<div class="click_features">
  <%= render "articles/foreign_involvement/click_features" %>  
</div>


<script>
$(document).ready(function() {

  var map = L.map('choropleth_map',{scrollWheelZoom:false}).setView([49.1700,-122.9800], 10);

  L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);
  

  var municipal_monthly_no_foreign = $("#municipal_monthly_no_foreign").val();
  var geojson;
  
  geojson = L.geoJson(JSON.parse(municipal_monthly_no_foreign), {
    style: style,
    onEachFeature: onEachFeature
  }).addTo(map);


  var info = L.control();
  info.onAdd = function(map) {
    this._div = L.DomUtil.create('div', 'info');
    this.update();
    return this._div;
  };

  info.update = function(props) {
    this._div.innerHTML = '<h4>Foreign Involvement Transactions</h4>' + (props ?
          '<b>' + props.name + '</b><br />' + props.ptt + ' transactions'
          : 'Click or hover over each area');
  };
  info.addTo(map);


  var legend = L.control({position: 'bottomright'});

  legend.onAdd = function(map) {

      var div = L.DomUtil.create('div', 'info legend'),
          grades = [0, 100, 200, 300, 400, 500, 600, 700],
          labels = [];

      for (var i = 0; i < grades.length; i++) {
          div.innerHTML +=
              '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
              grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
      }

      return div;
  };

  legend.addTo(map);


  function getColor(d) {
    return d > 700 ? '#800026' :
      d > 600  ? '#BD0026' :
      d > 500  ? '#E31A1C' :
      d > 400  ? '#FC4E2A' :
      d > 300   ? '#FD8D3C' :
      d > 200   ? '#FEB24C' :
      d > 100   ? '#FED976' :
      '#FFEDA0';
  }

  function style(feature) {
      return {
          fillColor: getColor(feature.properties.ptt),
          weight: 2,
          opacity: 1,
          color: 'white',
          dashArray: '3',
          fillOpacity: 0.7
      };
  }

  function highlightFeature(e) {
      var layer = e.target;

      layer.setStyle({
          weight: 3,
          color: 'rgba(54, 162, 235, 1)',
          dashArray: '',
          fillOpacity: 0.7
      });

      if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
          layer.bringToFront();
      }
      info.update(layer.feature.properties);
  }

  function resetHighlight(e) {
      geojson.resetStyle(e.target);
      info.update();
  }

  function zoomToFeature(e) {
      map.fitBounds(e.target.getBounds());
  }

  function onEachFeature(feature, layer) {
    layer.on({
      mouseover: highlightFeature,
      mouseout: resetHighlight,
      //click: zoomToFeature
      click: clickFeature
    });
  }

  function clickFeature(e) {
    switch(e.target.feature.properties.name) {
      case "Abbotsford":
        $('#AbbotsfordModal').modal('show');
        break;
      case "Chilliwack":
        $('#ChilliwackModal').modal('show');
        break;
      case "Burnaby":
        $('#BurnabyModal').modal('show');
        break;
      case "Richmond":
        $('#RichmondModal').modal('show');
        break;
      case "Surrey":
        $('#SurreyModal').modal('show');
        break;
      case "Vancouver":
        $('#VancouverModal').modal('show');
        break;
      case "Whistler":
        $('#WhistlerModal').modal('show');
        break;
      case "Kelowna":
        $('#KelownaModal').modal('show');
        break;
      case "Nanaimo":
        $('#NanaimoModal').modal('show');
        break;
      default:
        console.log("There no relevant city");
        break;
    }
  }
});
</script>